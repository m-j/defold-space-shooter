
function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	self.offset = vmath.vector3(0,0,0)
	msg.post(".", "acquire_input_focus")
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed

	local pos = go.get_position()
	local new_pos = pos + self.offset * dt * 100
	go.set_position(new_pos)
end

function fixed_update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

local function animation_finished(self)
	if self.offset.x ~= 0 then
		sprite.play_flipbook("player#sprite", hash('fly_bank'))
	end
end

local function play_animation(offset)
	-- local current_animation = go.get("player#sprite", "animation")
	-- if(current_animation ~= new_animation) then
	-- msg.post("player#sprite", "play_animation", {id = new_animation})

	local new_animation = nil

	if offset.x > 0 then
		sprite.play_flipbook("player#sprite", hash('bank'), animation_finished)
		sprite.set_hflip("player#sprite", false)
	elseif offset.x < 0 then
		sprite.play_flipbook("player#sprite", hash('bank'), animation_finished)
		sprite.set_hflip("player#sprite", true)		
	elseif vmath.length(offset) > 0 then
		sprite.play_flipbook("player#sprite", hash('fly'))
	else
		sprite.play_flipbook("player#sprite", hash("fly"))
	end
	
	
	-- end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
	local offset = self.offset

	if action.released then
		pprint("released")
		self.offset = vmath.vector3(0,0,0)
		msg.post("player#sprite", "play_animation", {id = hash("fly")})
		return
	end	


	if action.pressed then

		if action_id == hash("left") then
			offset = offset + vmath.vector3(-1,0,0)
			-- play_animation(hash("fly_bank"))
			-- msg.post("player#sprite", "play_animation", {id = hash("fly_bank")})
			-- sprite.set_hflip("player#sprite", true)
		end
		if action_id == hash("right") then
			offset = offset + vmath.vector3(1, 0, 0)
			-- play_animation(hash("fly_bank"))
			-- msg.post("player#sprite", "play_animation", {id = hash("fly_bank")})
			-- sprite.set_hflip("player#sprite", false)		
		end		
		if action_id == hash("up") then
			offset = offset + vmath.vector3(0, 1, 0)
			-- play_animation(hash("fly"))
			-- msg.post("player#sprite", "play_animation", {id = hash("fly")})
		end
		if action_id == hash("down") then
			offset = offset + vmath.vector3(0, -1, 0)
			-- play_animation(hash("fly"))
			-- msg.post("player#sprite", "play_animation", {id = hash("fly")})
		end
		
		if vmath.length_sqr(offset) > 0 then
			offset = vmath.normalize(offset)
		end

		play_animation(offset)
	end

			
	self.offset = offset	
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
